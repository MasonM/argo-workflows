# This admission policy (https://kubernetes.io/docs/reference/access-authn-authz/validating-admission-policy/)
# can be used to block workflows that use string interpolation inside the fields "command",
# "args", or "source".
#
# Interpolating untrusted user input into this fields can lead to command
# injection vulnerabilities (https://owasp.org/www-community/attacks/Command_Injection).
#
# This policy will only work when using the full CRDs (https://argo-workflows.readthedocs.io/en/latest/installation/#full-crds).
# You must create a ValidatingAdmissionPolicyBinding to use it.
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionPolicy
metadata:
  name: "argo-dangerous-interpolation-vap"
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
    - apiGroups:   ["argoproj.io"]
      apiVersions: ["v1alpha1"]
      operations:  ["CREATE", "UPDATE"]
      resources:   ["workflows"]
  validations:
    - expression: |
        !object.spec.templates.exists(t,
          (
            t.?container.command.orValue([])
            + t.?container.args.orValue([])
            + t.?script.command.orValue([])
            + [t.?script.source.orValue("")]
          ).exists(value, value.matches('\\{\\{[^\\}]*\\}\\}'))
          // TODO: Should be able to eliminate this duplication once we can use transformList: https://github.com/kubernetes/kubernetes/pull/128593
          || t.?containerSet.optMap(cs,
            cs.containers.exists(c,
              (
                c.?command.orValue([])
                + c.?args.orValue([])
              ).exists(value, value.matches('\\{\\{[^\\}]*\\}\\}'))
            )
          ).orValue(false)
        )
      message: "Dangerous interpolation detected"